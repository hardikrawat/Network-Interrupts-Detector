/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import java.awt.Color;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Socket;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author hardi
 */
public class MainFrame extends javax.swing.JFrame {

    private Timer timer;
    private int count = 100;
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm:ss");
    int ndrops = 0;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        timer = new Timer(2000, e -> {
            if (count > 0) {
                checkNWInterrupts();
                count--;
                prg.setString("Remaining Seconds : " + count * 2000);
                prg.setValue(100 - count);
                prg.update(prg.getGraphics());
            } else {
                log.append("Task Finished : " + dtf.format(LocalDateTime.now()));
                ((Timer) (e.getSource())).stop();
                count = 10;
//                button.setEnabled(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnInternetMonitoring = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        status1 = new javax.swing.JLabel();
        prg = new javax.swing.JProgressBar();
        drops = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        IP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btnInternetMonitoring.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        btnInternetMonitoring.setText("Enable Internet Connectivity Monitoring");
        btnInternetMonitoring.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInternetMonitoring.setFocusPainted(false);
        btnInternetMonitoring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInternetMonitoringActionPerformed(evt);
            }
        });

        log.setEditable(false);
        log.setBackground(new java.awt.Color(0, 122, 255));
        log.setColumns(20);
        log.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        log.setForeground(new java.awt.Color(51, 51, 51));
        log.setRows(5);
        log.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        log.setOpaque(false);
        jScrollPane1.setViewportView(log);

        status1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        status1.setForeground(new java.awt.Color(255, 0, 0));
        status1.setText("Disabled");

        prg.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        prg.setForeground(new java.awt.Color(0, 122, 255));
        prg.setValue(100);
        prg.setOpaque(true);
        prg.setString("Remaining Seconds: ?");
        prg.setStringPainted(true);

        drops.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        drops.setForeground(new java.awt.Color(255, 0, 0));
        drops.setText("N/W Interrupts:0");

        jLabel1.setText("<html><u>Clear Logs");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setText("<html><u>Settings");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setText("|");

        jLabel4.setText("|");

        jLabel5.setText("|");

        IP.setText("192.168.1.?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInternetMonitoring)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(status1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(drops)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInternetMonitoring)
                    .addComponent(status1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drops))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInternetMonitoringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInternetMonitoringActionPerformed
        if (btnInternetMonitoring.getText().equals("Enable Internet Connectivity Monitoring")) {
            status1.setText("Enabled");
            drops.setText("N/W Interrupts:" + ndrops);
            btnInternetMonitoring.setText("Disable Internet Connectivity Monitoring");
            status1.setForeground(Color.decode("#66B447"));
            log.append("Checking Mid N/W Interrupts...\nSending Ping Request to www.google.com...\n\n");
            IP.setEditable(false);
            if (IP.getText().contains("?")) {
                log.append("[" + dtf.format(LocalDateTime.now()) + "] Incorrect IP : " + IP.getText() + "\n");
            } else {
                timer.start();
            }
//            thread1.start();
//            if(thread1.isAlive()) log.append("Thread1 started.\n");
        } else {
            count = 100;
            ndrops = 0;
            timer.stop();
            log.append("\n\n-----------------------Processed Killed Successfully-------------------------\n\n");
            status1.setForeground(Color.decode("#FF3B30"));
            status1.setText("Disabled");
            btnInternetMonitoring.setText("Enable Internet Connectivity Monitoring");
            IP.setEditable(true);

        }
    }//GEN-LAST:event_btnInternetMonitoringActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
//        btn.setVisible(false);
//        status.setVisible(false);
    }//GEN-LAST:event_formWindowActivated

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        log.setText("");
    }//GEN-LAST:event_jLabel1MouseClicked

    public void checkNWInterrupts() {
        try {
            String address = InetAddress.getByName(IP.getText()).getHostAddress();
            InetAddress inet = InetAddress.getByName(address);
            if (inet.isReachable(2000)) {
                log.append("[" + dtf.format(LocalDateTime.now()) + "] Host is Reachable\n");
            } else {
                ndrops++;
                drops.setText("N/W Interrupts:" + ndrops);
                log.append("[" + dtf.format(LocalDateTime.now()) + "] Network Drop Detected\n");
            }
        } catch (Exception e) {
            log.append(dtf.format(LocalDateTime.now()) + " : Network Drop Detected\n");
            log.append(e.getMessage() + "\n");
            ndrops++;
            drops.setText("N/W Interrupts:" + ndrops);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IP;
    private javax.swing.JButton btnInternetMonitoring;
    private javax.swing.JLabel drops;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea log;
    private javax.swing.JProgressBar prg;
    private javax.swing.JLabel status1;
    // End of variables declaration//GEN-END:variables
}
